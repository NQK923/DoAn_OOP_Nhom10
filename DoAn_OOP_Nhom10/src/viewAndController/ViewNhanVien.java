
/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package viewAndController;

import ConnectDatabase.ConnectToXampp;
import java.awt.Color;
import java.awt.Desktop;
import java.awt.HeadlessException;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Collections;
import java.util.List;
import javax.swing.BorderFactory;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import modun.Flower;
import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.ss.usermodel.Sheet;
import org.apache.poi.ss.usermodel.Workbook;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;
import modun.banyanFlower;
import modun.listError;
import modun.listFlower;
import modun.singleFlower;

/**
 *
 * @author pc
 */
public class ViewNhanVien extends javax.swing.JFrame {

    private ViewLogin vLogin;
    private List<listFlower> list = new ArrayList<>();
    private List<listFlower> listCoutTmp = new ArrayList<>();
    private List<listFlower> listImport = new ArrayList<>();
    private List<listFlower> listExport = new ArrayList<>();
    private List<listError> listEr = new ArrayList<>();
    private String typeFlower = "";
    private String typeFlowerEx = "";
    private String typeFlowerExS = "";

    public ViewNhanVien() {
        initComponents();
        this.setLocationRelativeTo(null);
        formHome.setVisible(true);
        formEdit.setVisible(false);
        formDelete.setVisible(false);
        formCinHistory.setVisible(false);
        formCoutHistory.setVisible(false);
        formErr.setVisible(false);
        formCoutS.setVisible(false);
        get_Data_From_SQL();
        this.setDefaultCloseOperation(EXIT_ON_CLOSE);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        cinButtonGroup = new javax.swing.ButtonGroup();
        coutButtonGroup = new javax.swing.ButtonGroup();
        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jSeparator1 = new javax.swing.JSeparator();
        btnHome = new javax.swing.JLabel();
        jSeparator2 = new javax.swing.JSeparator();
        btnHistoryEmp = new javax.swing.JLabel();
        btnHistoryImp = new javax.swing.JLabel();
        btnRemove = new javax.swing.JLabel();
        btnEdit = new javax.swing.JLabel();
        jSeparator3 = new javax.swing.JSeparator();
        jSeparator4 = new javax.swing.JSeparator();
        jSeparator5 = new javax.swing.JSeparator();
        jSeparator6 = new javax.swing.JSeparator();
        btnErrList = new javax.swing.JLabel();
        btnLogout = new javax.swing.JLabel();
        jSeparator9 = new javax.swing.JSeparator();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        formHome = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableHome = new javax.swing.JTable();
        btnExcelHome = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        formEdit = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tableCin = new javax.swing.JTable();
        jPanel6 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        cInCode = new javax.swing.JTextField();
        cInName = new javax.swing.JTextField();
        cInColor = new javax.swing.JTextField();
        cInSubflower = new javax.swing.JTextField();
        cInPetalsFlower = new javax.swing.JTextField();
        cInAmount = new javax.swing.JTextField();
        cInSingle = new javax.swing.JRadioButton();
        cInBanyan = new javax.swing.JRadioButton();
        jLabel13 = new javax.swing.JLabel();
        messFormCin = new javax.swing.JLabel();
        cInBtn = new javax.swing.JButton();
        cInReset = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        formDelete = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        tableCout = new javax.swing.JTable();
        formCout = new javax.swing.JPanel();
        jLabel15 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        CoutCode = new javax.swing.JTextField();
        CoutAmount = new javax.swing.JTextField();
        jLabel23 = new javax.swing.JLabel();
        CoutBtn = new javax.swing.JButton();
        CoutReset = new javax.swing.JButton();
        coutSingle = new javax.swing.JRadioButton();
        coutBanyan = new javax.swing.JRadioButton();
        jLabel14 = new javax.swing.JLabel();
        formCoutS = new javax.swing.JPanel();
        jLabel26 = new javax.swing.JLabel();
        jLabel27 = new javax.swing.JLabel();
        CoutCodeS = new javax.swing.JTextField();
        coutSingleS = new javax.swing.JRadioButton();
        coutBanyanS = new javax.swing.JRadioButton();
        jLabel28 = new javax.swing.JLabel();
        CoutAmountS = new javax.swing.JTextField();
        jButton6 = new javax.swing.JButton();
        CoutResetS = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jLabel32 = new javax.swing.JLabel();
        formTableCoutS = new javax.swing.JPanel();
        titleCoutS = new javax.swing.JLabel();
        jScrollPane8 = new javax.swing.JScrollPane();
        tableCoutS = new javax.swing.JTable();
        jButton7 = new javax.swing.JButton();
        formCinHistory = new javax.swing.JPanel();
        jScrollPane6 = new javax.swing.JScrollPane();
        tbHistoryImport = new javax.swing.JTable();
        jLabel24 = new javax.swing.JLabel();
        btnCinExcel = new javax.swing.JButton();
        formCoutHistory = new javax.swing.JPanel();
        jScrollPane5 = new javax.swing.JScrollPane();
        tbHistoryExport = new javax.swing.JTable();
        jLabel4 = new javax.swing.JLabel();
        btnCoutExcel = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        formErr = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        tableError = new javax.swing.JTable();
        jLabel12 = new javax.swing.JLabel();
        btnExcelErr = new javax.swing.JButton();
        jPanel8 = new javax.swing.JPanel();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();
        errCode = new javax.swing.JTextField();
        errName = new javax.swing.JTextField();
        errColor = new javax.swing.JTextField();
        errSubflower = new javax.swing.JTextField();
        errPetalsFlower = new javax.swing.JTextField();
        errAmount = new javax.swing.JTextField();
        errSingle = new javax.swing.JRadioButton();
        errBanyan = new javax.swing.JRadioButton();
        messFormCin1 = new javax.swing.JLabel();
        errCinButton = new javax.swing.JButton();
        errClearButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(153, 153, 255));

        jSeparator1.setBackground(new java.awt.Color(51, 51, 51));
        jSeparator1.setForeground(new java.awt.Color(0, 0, 0));

        btnHome.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnHome.setIcon(new javax.swing.ImageIcon(getClass().getResource("/viewAndController/icons8-house-64.png"))); // NOI18N
        btnHome.setText("Trang chủ");
        btnHome.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnHomeMouseClicked(evt);
            }
        });

        jSeparator2.setBackground(new java.awt.Color(0, 0, 0));
        jSeparator2.setForeground(new java.awt.Color(0, 0, 0));

        btnHistoryEmp.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnHistoryEmp.setIcon(new javax.swing.ImageIcon(getClass().getResource("/viewAndController/icons8-order-history-50.png"))); // NOI18N
        btnHistoryEmp.setText(" Lịch sử xuất");
        btnHistoryEmp.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnHistoryEmpMouseClicked(evt);
            }
        });

        btnHistoryImp.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnHistoryImp.setIcon(new javax.swing.ImageIcon(getClass().getResource("/viewAndController/icons8-order-history-50.png"))); // NOI18N
        btnHistoryImp.setText(" Lịch sử nhập");
        btnHistoryImp.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnHistoryImpMouseClicked(evt);
            }
        });

        btnRemove.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnRemove.setIcon(new javax.swing.ImageIcon(getClass().getResource("/viewAndController/icons8-export-64.png"))); // NOI18N
        btnRemove.setText(" Xuất sản phẩm");
        btnRemove.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnRemoveMouseClicked(evt);
            }
        });

        btnEdit.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnEdit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/viewAndController/icons8-input-50.png"))); // NOI18N
        btnEdit.setText("Nhập sản phẩm");
        btnEdit.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnEditMouseClicked(evt);
            }
        });

        jSeparator3.setBackground(new java.awt.Color(0, 0, 0));
        jSeparator3.setForeground(new java.awt.Color(0, 0, 0));

        jSeparator4.setBackground(new java.awt.Color(0, 0, 0));
        jSeparator4.setForeground(new java.awt.Color(0, 0, 0));

        jSeparator5.setBackground(new java.awt.Color(0, 0, 0));
        jSeparator5.setForeground(new java.awt.Color(0, 0, 0));

        jSeparator6.setBackground(new java.awt.Color(0, 0, 0));
        jSeparator6.setForeground(new java.awt.Color(0, 0, 0));

        btnErrList.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnErrList.setIcon(new javax.swing.ImageIcon(getClass().getResource("/viewAndController/icons8-check-book-50.png"))); // NOI18N
        btnErrList.setText("Danh sách nhập lỗi");
        btnErrList.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnErrListMouseClicked(evt);
            }
        });

        btnLogout.setFont(new java.awt.Font("Segoe UI", 3, 14)); // NOI18N
        btnLogout.setIcon(new javax.swing.ImageIcon(getClass().getResource("/viewAndController/icons8-logout-rounded-50.png"))); // NOI18N
        btnLogout.setText("Đăng xuất");
        btnLogout.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnLogoutMouseClicked(evt);
            }
        });

        jSeparator9.setBackground(new java.awt.Color(0, 0, 0));
        jSeparator9.setForeground(new java.awt.Color(0, 0, 0));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSeparator1)
            .addComponent(jSeparator3, javax.swing.GroupLayout.Alignment.TRAILING)
            .addComponent(jSeparator4, javax.swing.GroupLayout.Alignment.TRAILING)
            .addComponent(jSeparator5, javax.swing.GroupLayout.Alignment.TRAILING)
            .addComponent(jSeparator2, javax.swing.GroupLayout.Alignment.TRAILING)
            .addComponent(jSeparator6)
            .addComponent(jSeparator9)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btnLogout, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnErrList, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnHistoryImp, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnRemove, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnEdit, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnHistoryEmp, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(btnHome, javax.swing.GroupLayout.DEFAULT_SIZE, 183, Short.MAX_VALUE)
                    .addContainerGap()))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(59, 59, 59)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnEdit, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 3, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnRemove, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnHistoryImp, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator5, javax.swing.GroupLayout.PREFERRED_SIZE, 3, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnHistoryEmp, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 3, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnErrList, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator6, javax.swing.GroupLayout.PREFERRED_SIZE, 3, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnLogout, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(196, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(btnHome, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(592, Short.MAX_VALUE)))
        );

        jPanel2.setBackground(new java.awt.Color(153, 153, 255));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/viewAndController/icons8-java-64.png"))); // NOI18N
        jLabel1.setText("NHÂN VIÊN");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addContainerGap(6346, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        tableHome.setAutoCreateRowSorter(true);
        tableHome.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Mã hoa", "Tên hoa", "Loại hoa", "Màu hoa", "Số hoa con", "Số cánh hoa", "Số lượng"
            }
        ));
        jScrollPane1.setViewportView(tableHome);
        if (tableHome.getColumnModel().getColumnCount() > 0) {
            tableHome.getColumnModel().getColumn(0).setPreferredWidth(60);
            tableHome.getColumnModel().getColumn(1).setMinWidth(100);
            tableHome.getColumnModel().getColumn(1).setPreferredWidth(100);
            tableHome.getColumnModel().getColumn(2).setPreferredWidth(60);
            tableHome.getColumnModel().getColumn(4).setPreferredWidth(60);
            tableHome.getColumnModel().getColumn(5).setPreferredWidth(60);
            tableHome.getColumnModel().getColumn(6).setPreferredWidth(50);
        }

        btnExcelHome.setFont(new java.awt.Font("Segoe UI", 2, 12)); // NOI18N
        btnExcelHome.setText("Xuất file Excel");
        btnExcelHome.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExcelHomeActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel2.setText("DANH SÁCH HOA TRONG KHO");

        javax.swing.GroupLayout formHomeLayout = new javax.swing.GroupLayout(formHome);
        formHome.setLayout(formHomeLayout);
        formHomeLayout.setHorizontalGroup(
            formHomeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(formHomeLayout.createSequentialGroup()
                .addGap(102, 102, 102)
                .addGroup(formHomeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 798, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, formHomeLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnExcelHome, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, formHomeLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 215, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(333, 333, 333))
        );
        formHomeLayout.setVerticalGroup(
            formHomeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, formHomeLayout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 394, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnExcelHome)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        tableCin.setAutoCreateRowSorter(true);
        tableCin.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Mã hoa", "Tên hoa", "Loại hoa", "Màu hoa", "Số hoa con", "Số cánh hoa", "Số lượng"
            }
        ));
        tableCin.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableCinMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tableCin);
        if (tableCin.getColumnModel().getColumnCount() > 0) {
            tableCin.getColumnModel().getColumn(0).setPreferredWidth(60);
            tableCin.getColumnModel().getColumn(1).setMinWidth(100);
            tableCin.getColumnModel().getColumn(1).setPreferredWidth(100);
            tableCin.getColumnModel().getColumn(2).setPreferredWidth(60);
            tableCin.getColumnModel().getColumn(4).setPreferredWidth(60);
            tableCin.getColumnModel().getColumn(5).setPreferredWidth(60);
            tableCin.getColumnModel().getColumn(6).setPreferredWidth(50);
        }

        jPanel6.setPreferredSize(new java.awt.Dimension(359, 502));

        jLabel5.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel5.setText("Mã hoa");

        jLabel6.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel6.setText("Tên hoa");

        jLabel7.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel7.setText("Loại hoa");

        jLabel8.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel8.setText("Màu hoa");

        jLabel9.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel9.setText("Số hoa con");

        jLabel10.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel10.setText("Số cánh hoa");

        jLabel11.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel11.setText("Số lượng");

        cInCode.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        cInCode.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 10, 1, 1));
        cInCode.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                cInCodeMouseClicked(evt);
            }
        });
        cInCode.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                cInCodeKeyReleased(evt);
            }
        });

        cInName.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        cInName.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 10, 1, 1));
        cInName.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                cInNameKeyReleased(evt);
            }
        });

        cInColor.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        cInColor.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 10, 1, 1));
        cInColor.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                cInColorKeyReleased(evt);
            }
        });

        cInSubflower.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        cInSubflower.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 10, 1, 1));
        cInSubflower.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                cInSubflowerKeyReleased(evt);
            }
        });

        cInPetalsFlower.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        cInPetalsFlower.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 10, 1, 1));
        cInPetalsFlower.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cInPetalsFlowerActionPerformed(evt);
            }
        });
        cInPetalsFlower.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                cInPetalsFlowerKeyReleased(evt);
            }
        });

        cInAmount.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        cInAmount.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 10, 1, 1));
        cInAmount.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                cInAmountKeyReleased(evt);
            }
        });

        cinButtonGroup.add(cInSingle);
        cInSingle.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        cInSingle.setText("Hoa đơn");
        cInSingle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cInSingleActionPerformed(evt);
            }
        });

        cinButtonGroup.add(cInBanyan);
        cInBanyan.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        cInBanyan.setText("Hoa đa");
        cInBanyan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cInBanyanActionPerformed(evt);
            }
        });

        jLabel13.setFont(new java.awt.Font("Segoe UI", 3, 16)); // NOI18N
        jLabel13.setText("Thông tin");

        messFormCin.setFont(new java.awt.Font("Segoe UI", 2, 12)); // NOI18N
        messFormCin.setForeground(new java.awt.Color(204, 0, 0));

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 27, Short.MAX_VALUE)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addComponent(cInPetalsFlower, javax.swing.GroupLayout.PREFERRED_SIZE, 204, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(14, Short.MAX_VALUE))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(cInColor, javax.swing.GroupLayout.PREFERRED_SIZE, 204, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(cInSubflower, javax.swing.GroupLayout.PREFERRED_SIZE, 204, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(jPanel6Layout.createSequentialGroup()
                                    .addComponent(cInSingle)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(cInBanyan)))
                            .addComponent(cInName, javax.swing.GroupLayout.PREFERRED_SIZE, 204, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cInCode, javax.swing.GroupLayout.PREFERRED_SIZE, 204, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cInAmount, javax.swing.GroupLayout.PREFERRED_SIZE, 204, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 13, Short.MAX_VALUE))))
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGap(128, 128, 128)
                        .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGap(87, 87, 87)
                        .addComponent(messFormCin, javax.swing.GroupLayout.PREFERRED_SIZE, 217, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addComponent(jLabel13)
                .addGap(32, 32, 32)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cInCode, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cInName, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cInBanyan, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(cInSingle, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel7, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGap(18, 18, 18)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cInColor, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cInSubflower, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cInPetalsFlower, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cInAmount, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 13, Short.MAX_VALUE)
                .addComponent(messFormCin, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(14, 14, 14))
        );

        cInBtn.setText("Nhập");
        cInBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cInBtnActionPerformed(evt);
            }
        });

        cInReset.setText("Hủy bỏ");
        cInReset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cInResetActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel3.setText("NHẬP SẢN PHẨM");

        jButton1.setText("Nhập từ Excel");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout formEditLayout = new javax.swing.GroupLayout(formEdit);
        formEdit.setLayout(formEditLayout);
        formEditLayout.setHorizontalGroup(
            formEditLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(formEditLayout.createSequentialGroup()
                .addGroup(formEditLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(formEditLayout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, 329, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 650, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(formEditLayout.createSequentialGroup()
                        .addGap(137, 137, 137)
                        .addComponent(cInBtn)
                        .addGap(61, 61, 61)
                        .addComponent(cInReset)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton1)))
                .addContainerGap(50, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, formEditLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(310, 310, 310))
        );
        formEditLayout.setVerticalGroup(
            formEditLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(formEditLayout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(formEditLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, 460, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 436, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(formEditLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cInBtn)
                    .addGroup(formEditLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(cInReset)
                        .addComponent(jButton1)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        tableCout.setAutoCreateRowSorter(true);
        tableCout.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Mã hoa", "Tên hoa", "Loại hoa", "Màu hoa", "Số hoa con", "Số cánh hoa", "Số lượng"
            }
        ));
        tableCout.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableCoutMouseClicked(evt);
            }
        });
        jScrollPane4.setViewportView(tableCout);
        if (tableCout.getColumnModel().getColumnCount() > 0) {
            tableCout.getColumnModel().getColumn(0).setPreferredWidth(60);
            tableCout.getColumnModel().getColumn(1).setMinWidth(100);
            tableCout.getColumnModel().getColumn(1).setPreferredWidth(100);
            tableCout.getColumnModel().getColumn(2).setPreferredWidth(60);
            tableCout.getColumnModel().getColumn(4).setPreferredWidth(60);
            tableCout.getColumnModel().getColumn(5).setPreferredWidth(60);
            tableCout.getColumnModel().getColumn(6).setPreferredWidth(50);
        }

        formCout.setPreferredSize(new java.awt.Dimension(359, 502));

        jLabel15.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel15.setText("Mã hoa");

        jLabel21.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel21.setText("Số lượng xuất");

        CoutCode.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        CoutCode.setBorder(javax.swing.BorderFactory.createEmptyBorder(5, 5, 5, 5));
        CoutCode.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CoutCodeActionPerformed(evt);
            }
        });

        CoutAmount.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        CoutAmount.setBorder(javax.swing.BorderFactory.createEmptyBorder(5, 5, 5, 5));
        CoutAmount.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CoutAmountActionPerformed(evt);
            }
        });

        jLabel23.setFont(new java.awt.Font("Segoe UI", 3, 16)); // NOI18N
        jLabel23.setText("Thông tin");

        CoutBtn.setText("Xuất");
        CoutBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CoutBtnActionPerformed(evt);
            }
        });

        CoutReset.setText("Hủy bỏ");
        CoutReset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CoutResetActionPerformed(evt);
            }
        });

        coutButtonGroup.add(coutSingle);
        coutSingle.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        coutSingle.setText("Hoa đơn");
        coutSingle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                coutSingleActionPerformed(evt);
            }
        });

        coutButtonGroup.add(coutBanyan);
        coutBanyan.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        coutBanyan.setText("Hoa đa");
        coutBanyan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                coutBanyanActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout formCoutLayout = new javax.swing.GroupLayout(formCout);
        formCout.setLayout(formCoutLayout);
        formCoutLayout.setHorizontalGroup(
            formCoutLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(formCoutLayout.createSequentialGroup()
                .addGap(128, 128, 128)
                .addComponent(jLabel23, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(formCoutLayout.createSequentialGroup()
                .addGroup(formCoutLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(formCoutLayout.createSequentialGroup()
                        .addGap(13, 13, 13)
                        .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(formCoutLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, formCoutLayout.createSequentialGroup()
                                .addComponent(coutSingle)
                                .addGap(50, 50, 50)
                                .addComponent(coutBanyan))
                            .addComponent(CoutCode, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(formCoutLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(formCoutLayout.createSequentialGroup()
                            .addGap(13, 13, 13)
                            .addComponent(jLabel21, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(CoutAmount, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(formCoutLayout.createSequentialGroup()
                            .addGap(100, 100, 100)
                            .addComponent(CoutBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(50, 50, 50)
                            .addComponent(CoutReset, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(16, 16, 16))
        );

        formCoutLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {CoutAmount, CoutCode});

        formCoutLayout.setVerticalGroup(
            formCoutLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(formCoutLayout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(jLabel23, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(56, 56, 56)
                .addGroup(formCoutLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(CoutCode, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(31, 31, 31)
                .addGroup(formCoutLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(coutSingle)
                    .addComponent(coutBanyan))
                .addGap(28, 28, 28)
                .addGroup(formCoutLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(CoutAmount, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel21, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(29, 29, 29)
                .addGroup(formCoutLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(CoutBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(CoutReset, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(137, 137, 137))
        );

        formCoutLayout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {CoutAmount, CoutCode});

        jLabel14.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel14.setText("XUẤT SẢN PHẨM");

        formCoutS.setPreferredSize(new java.awt.Dimension(329, 502));

        jLabel26.setFont(new java.awt.Font("Segoe UI", 3, 16)); // NOI18N
        jLabel26.setText("Thông tin");

        jLabel27.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel27.setText("Mã hoa");

        CoutCodeS.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        CoutCodeS.setBorder(javax.swing.BorderFactory.createEmptyBorder(5, 5, 5, 5));
        CoutCodeS.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CoutCodeSActionPerformed(evt);
            }
        });

        buttonGroup1.add(coutSingleS);
        coutSingleS.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        coutSingleS.setText("Hoa đơn");
        coutSingleS.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                coutSingleSActionPerformed(evt);
            }
        });

        buttonGroup1.add(coutBanyanS);
        coutBanyanS.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        coutBanyanS.setText("Hoa đa");
        coutBanyanS.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                coutBanyanSActionPerformed(evt);
            }
        });

        jLabel28.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel28.setText("Số lượng xuất");

        CoutAmountS.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        CoutAmountS.setBorder(javax.swing.BorderFactory.createEmptyBorder(5, 5, 5, 5));
        CoutAmountS.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CoutAmountSActionPerformed(evt);
            }
        });

        jButton6.setText("Chọn");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        CoutResetS.setText("Hủy bỏ");
        CoutResetS.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CoutResetSActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout formCoutSLayout = new javax.swing.GroupLayout(formCoutS);
        formCoutS.setLayout(formCoutSLayout);
        formCoutSLayout.setHorizontalGroup(
            formCoutSLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(formCoutSLayout.createSequentialGroup()
                .addGap(128, 128, 128)
                .addComponent(jLabel26, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(formCoutSLayout.createSequentialGroup()
                .addGroup(formCoutSLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(formCoutSLayout.createSequentialGroup()
                        .addGap(13, 13, 13)
                        .addComponent(jLabel28, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(CoutAmountS, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(formCoutSLayout.createSequentialGroup()
                        .addGap(100, 100, 100)
                        .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(50, 50, 50)
                        .addComponent(CoutResetS, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, formCoutSLayout.createSequentialGroup()
                .addContainerGap(10, Short.MAX_VALUE)
                .addComponent(jLabel27, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(12, 12, 12)
                .addGroup(formCoutSLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(formCoutSLayout.createSequentialGroup()
                        .addComponent(coutSingleS)
                        .addGap(50, 50, 50)
                        .addComponent(coutBanyanS))
                    .addComponent(CoutCodeS, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(16, 16, 16))
        );
        formCoutSLayout.setVerticalGroup(
            formCoutSLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(formCoutSLayout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(jLabel26, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(56, 56, 56)
                .addGroup(formCoutSLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel27, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(CoutCodeS, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(31, 31, 31)
                .addGroup(formCoutSLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(coutSingleS)
                    .addComponent(coutBanyanS))
                .addGap(28, 28, 28)
                .addGroup(formCoutSLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel28, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(CoutAmountS, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(29, 29, 29)
                .addGroup(formCoutSLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(CoutResetS, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(137, 137, 137))
        );

        jButton4.setText("XUẤT TỪNG SẢN PHẨM");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton5.setText("XUẤT NHIỀU SẢN PHẨM");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jLabel32.setText("DANH SÁCH HOA TRONG KHO");

        titleCoutS.setText("DANH SÁCH HOA CHUẨN BỊ XUẤT");

        tableCoutS.setAutoCreateRowSorter(true);
        tableCoutS.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Mã hoa", "Tên hoa", "Loại hoa", "Màu hoa", "Số hoa con", "Số cánh hoa", "Số lượng"
            }
        ));
        tableCoutS.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableCoutSMouseClicked(evt);
            }
        });
        jScrollPane8.setViewportView(tableCoutS);
        if (tableCoutS.getColumnModel().getColumnCount() > 0) {
            tableCoutS.getColumnModel().getColumn(0).setPreferredWidth(60);
            tableCoutS.getColumnModel().getColumn(1).setMinWidth(100);
            tableCoutS.getColumnModel().getColumn(1).setPreferredWidth(100);
            tableCoutS.getColumnModel().getColumn(2).setPreferredWidth(60);
            tableCoutS.getColumnModel().getColumn(4).setPreferredWidth(60);
            tableCoutS.getColumnModel().getColumn(5).setPreferredWidth(60);
            tableCoutS.getColumnModel().getColumn(6).setPreferredWidth(50);
        }

        javax.swing.GroupLayout formTableCoutSLayout = new javax.swing.GroupLayout(formTableCoutS);
        formTableCoutS.setLayout(formTableCoutSLayout);
        formTableCoutSLayout.setHorizontalGroup(
            formTableCoutSLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(formTableCoutSLayout.createSequentialGroup()
                .addGap(194, 194, 194)
                .addComponent(titleCoutS, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addComponent(jScrollPane8)
        );
        formTableCoutSLayout.setVerticalGroup(
            formTableCoutSLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(formTableCoutSLayout.createSequentialGroup()
                .addComponent(titleCoutS, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane8, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 13, Short.MAX_VALUE))
        );

        jButton7.setText("Xuất");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout formDeleteLayout = new javax.swing.GroupLayout(formDelete);
        formDelete.setLayout(formDeleteLayout);
        formDeleteLayout.setHorizontalGroup(
            formDeleteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, formDeleteLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel32, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(457, 457, 457))
            .addGroup(formDeleteLayout.createSequentialGroup()
                .addGroup(formDeleteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(formDeleteLayout.createSequentialGroup()
                        .addGap(384, 384, 384)
                        .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(formDeleteLayout.createSequentialGroup()
                        .addGroup(formDeleteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(formDeleteLayout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(formCout, javax.swing.GroupLayout.PREFERRED_SIZE, 329, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(formCoutS, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(formDeleteLayout.createSequentialGroup()
                                .addGap(24, 24, 24)
                                .addComponent(jButton4)
                                .addGap(25, 25, 25)
                                .addComponent(jButton5)))
                        .addGap(45, 45, 45)
                        .addGroup(formDeleteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(formDeleteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 600, Short.MAX_VALUE)
                                .addComponent(formTableCoutS, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(jButton7))))
                .addContainerGap(250, Short.MAX_VALUE))
        );
        formDeleteLayout.setVerticalGroup(
            formDeleteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(formDeleteLayout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(15, 15, 15)
                .addComponent(jLabel32, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(formDeleteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(formDeleteLayout.createSequentialGroup()
                        .addGroup(formDeleteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton4)
                            .addComponent(jButton5))
                        .addGap(37, 37, 37)
                        .addGroup(formDeleteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(formCout, javax.swing.GroupLayout.DEFAULT_SIZE, 450, Short.MAX_VALUE)
                            .addComponent(formCoutS, javax.swing.GroupLayout.DEFAULT_SIZE, 450, Short.MAX_VALUE)))
                    .addGroup(formDeleteLayout.createSequentialGroup()
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(formTableCoutS, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton7, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        formCinHistory.setPreferredSize(new java.awt.Dimension(904, 581));

        tbHistoryImport.setAutoCreateRowSorter(true);
        tbHistoryImport.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Mã hoa", "Tên hoa", "Loại hoa", "Màu hoa", "Số hoa con", "Số cánh hoa", "Số lượng", "Thời gian nhập"
            }
        ));
        jScrollPane6.setViewportView(tbHistoryImport);
        if (tbHistoryImport.getColumnModel().getColumnCount() > 0) {
            tbHistoryImport.getColumnModel().getColumn(0).setPreferredWidth(60);
            tbHistoryImport.getColumnModel().getColumn(1).setMinWidth(100);
            tbHistoryImport.getColumnModel().getColumn(1).setPreferredWidth(100);
            tbHistoryImport.getColumnModel().getColumn(2).setPreferredWidth(60);
            tbHistoryImport.getColumnModel().getColumn(4).setPreferredWidth(60);
            tbHistoryImport.getColumnModel().getColumn(5).setPreferredWidth(60);
            tbHistoryImport.getColumnModel().getColumn(6).setPreferredWidth(50);
        }

        jLabel24.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel24.setText("DANH SÁCH HOA ĐÃ NHẬP");

        btnCinExcel.setFont(new java.awt.Font("Segoe UI", 2, 12)); // NOI18N
        btnCinExcel.setText("Xuất file Excel");
        btnCinExcel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCinExcelActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout formCinHistoryLayout = new javax.swing.GroupLayout(formCinHistory);
        formCinHistory.setLayout(formCinHistoryLayout);
        formCinHistoryLayout.setHorizontalGroup(
            formCinHistoryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, formCinHistoryLayout.createSequentialGroup()
                .addGap(0, 161, Short.MAX_VALUE)
                .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 743, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, formCinHistoryLayout.createSequentialGroup()
                .addContainerGap(429, Short.MAX_VALUE)
                .addGroup(formCinHistoryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, formCinHistoryLayout.createSequentialGroup()
                        .addComponent(btnCinExcel, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, formCinHistoryLayout.createSequentialGroup()
                        .addComponent(jLabel24, javax.swing.GroupLayout.PREFERRED_SIZE, 215, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(260, 260, 260))))
        );
        formCinHistoryLayout.setVerticalGroup(
            formCinHistoryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, formCinHistoryLayout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(jLabel24, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 437, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnCinExcel)
                .addContainerGap())
        );

        tbHistoryExport.setAutoCreateRowSorter(true);
        tbHistoryExport.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Mã hoa", "Tên hoa", "Loại hoa", "Màu hoa", "Số hoa con", "Số cánh hoa", "Số lượng", "Thời gian xuất"
            }
        ));
        tbHistoryExport.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbHistoryExportMouseClicked(evt);
            }
        });
        jScrollPane5.setViewportView(tbHistoryExport);
        if (tbHistoryExport.getColumnModel().getColumnCount() > 0) {
            tbHistoryExport.getColumnModel().getColumn(0).setPreferredWidth(60);
            tbHistoryExport.getColumnModel().getColumn(1).setMinWidth(100);
            tbHistoryExport.getColumnModel().getColumn(1).setPreferredWidth(100);
            tbHistoryExport.getColumnModel().getColumn(2).setPreferredWidth(60);
            tbHistoryExport.getColumnModel().getColumn(4).setPreferredWidth(60);
            tbHistoryExport.getColumnModel().getColumn(5).setPreferredWidth(60);
            tbHistoryExport.getColumnModel().getColumn(6).setPreferredWidth(50);
        }

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel4.setText("DANH SÁCH HOA ĐÃ XUẤT");

        btnCoutExcel.setFont(new java.awt.Font("Segoe UI", 2, 12)); // NOI18N
        btnCoutExcel.setText("Xuất file Excel");
        btnCoutExcel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCoutExcelActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout formCoutHistoryLayout = new javax.swing.GroupLayout(formCoutHistory);
        formCoutHistory.setLayout(formCoutHistoryLayout);
        formCoutHistoryLayout.setHorizontalGroup(
            formCoutHistoryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(formCoutHistoryLayout.createSequentialGroup()
                .addContainerGap(161, Short.MAX_VALUE)
                .addGroup(formCoutHistoryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane5, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 743, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, formCoutHistoryLayout.createSequentialGroup()
                        .addComponent(btnCoutExcel, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, formCoutHistoryLayout.createSequentialGroup()
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 215, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(260, 260, 260))))
        );
        formCoutHistoryLayout.setVerticalGroup(
            formCoutHistoryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, formCoutHistoryLayout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 437, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnCoutExcel)
                .addContainerGap())
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 619, Short.MAX_VALUE)
        );

        jPanel5.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1346, Short.MAX_VALUE)
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        formErr.setPreferredSize(new java.awt.Dimension(904, 543));

        tableError.setAutoCreateRowSorter(true);
        tableError.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Mã hoa", "Tên hoa", "Loại hoa", "Màu hoa", "Số hoa con", "Số cánh hoa", "Số lượng"
            }
        ));
        tableError.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableErrorMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(tableError);

        jLabel12.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel12.setText("DANH SÁCH HOA NHẬP LỖI  ");

        btnExcelErr.setFont(new java.awt.Font("Segoe UI", 2, 12)); // NOI18N
        btnExcelErr.setText("Sửa trong Excel");
        btnExcelErr.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExcelErrActionPerformed(evt);
            }
        });

        jPanel8.setPreferredSize(new java.awt.Dimension(359, 502));

        jLabel16.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel16.setText("Mã hoa");

        jLabel17.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel17.setText("Tên hoa");

        jLabel18.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel18.setText("Loại hoa");

        jLabel19.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel19.setText("Màu hoa");

        jLabel20.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel20.setText("Số hoa con");

        jLabel22.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel22.setText("Số cánh hoa");

        jLabel25.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel25.setText("Số lượng");

        errCode.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        errCode.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 10, 1, 1));
        errCode.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                errCodeMouseClicked(evt);
            }
        });
        errCode.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                errCodeKeyReleased(evt);
            }
        });

        errName.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        errName.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 10, 1, 1));
        errName.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                errNameKeyReleased(evt);
            }
        });

        errColor.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        errColor.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 10, 1, 1));
        errColor.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                errColorKeyReleased(evt);
            }
        });

        errSubflower.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        errSubflower.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 10, 1, 1));
        errSubflower.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                errSubflowerKeyReleased(evt);
            }
        });

        errPetalsFlower.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        errPetalsFlower.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 10, 1, 1));
        errPetalsFlower.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                errPetalsFlowerActionPerformed(evt);
            }
        });
        errPetalsFlower.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                errPetalsFlowerKeyReleased(evt);
            }
        });

        errAmount.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        errAmount.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 10, 1, 1));
        errAmount.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                errAmountKeyReleased(evt);
            }
        });

        buttonGroup2.add(errSingle);
        errSingle.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        errSingle.setText("Hoa đơn");
        errSingle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                errSingleActionPerformed(evt);
            }
        });

        buttonGroup2.add(errBanyan);
        errBanyan.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        errBanyan.setText("Hoa đa");
        errBanyan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                errBanyanActionPerformed(evt);
            }
        });

        messFormCin1.setFont(new java.awt.Font("Segoe UI", 2, 12)); // NOI18N
        messFormCin1.setForeground(new java.awt.Color(204, 0, 0));

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel22, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel19, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel18, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel17, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel16, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel20, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel25, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 75, Short.MAX_VALUE)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addComponent(errPetalsFlower, javax.swing.GroupLayout.PREFERRED_SIZE, 204, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(63, Short.MAX_VALUE))
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(errColor, javax.swing.GroupLayout.PREFERRED_SIZE, 204, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(errSubflower, javax.swing.GroupLayout.PREFERRED_SIZE, 204, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(jPanel8Layout.createSequentialGroup()
                                    .addComponent(errSingle)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(errBanyan)))
                            .addComponent(errName, javax.swing.GroupLayout.PREFERRED_SIZE, 204, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(errCode, javax.swing.GroupLayout.PREFERRED_SIZE, 204, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(errAmount, javax.swing.GroupLayout.PREFERRED_SIZE, 204, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 63, Short.MAX_VALUE))))
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGap(87, 87, 87)
                .addComponent(messFormCin1, javax.swing.GroupLayout.PREFERRED_SIZE, 217, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(errCode, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(errName, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(errBanyan, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(errSingle, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel18, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel19, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(errColor, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(errSubflower, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel20, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(errPetalsFlower, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel22, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel25, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(errAmount, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(messFormCin1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(14, 14, 14))
        );

        errCinButton.setText("Nhập");
        errCinButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                errCinButtonActionPerformed(evt);
            }
        });

        errClearButton.setText("Hủy bỏ");
        errClearButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                errClearButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout formErrLayout = new javax.swing.GroupLayout(formErr);
        formErr.setLayout(formErrLayout);
        formErrLayout.setHorizontalGroup(
            formErrLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(formErrLayout.createSequentialGroup()
                .addGap(161, 161, 161)
                .addGroup(formErrLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(formErrLayout.createSequentialGroup()
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 742, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, formErrLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jLabel12)
                        .addGap(260, 260, 260))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, formErrLayout.createSequentialGroup()
                        .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, 426, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(formErrLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(formErrLayout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(btnExcelErr, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(formErrLayout.createSequentialGroup()
                                .addGroup(formErrLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(errClearButton)
                                    .addComponent(errCinButton))
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addContainerGap())))
        );
        formErrLayout.setVerticalGroup(
            formErrLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(formErrLayout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(formErrLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(formErrLayout.createSequentialGroup()
                        .addComponent(btnExcelErr)
                        .addGap(52, 52, 52)
                        .addComponent(errCinButton, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(86, 86, 86)
                        .addComponent(errClearButton, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, 301, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(47, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, 0)
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(formHome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(formEdit, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(formDelete, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(formCinHistory, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(formCoutHistory, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(formErr, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(22, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(formHome, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(formErr, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(formEdit, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(formCinHistory, javax.swing.GroupLayout.DEFAULT_SIZE, 901, Short.MAX_VALUE)
                                .addComponent(formCoutHistory, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(formDelete, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 12, Short.MAX_VALUE)))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private int checkInputCinErr() {
        String code = errCode.getText();
        String name = errName.getText();
        String color = errColor.getText();
        String amount = errAmount.getText();
        int Am = Integer.parseInt(amount);
        String subFlower = errSubflower.getText();
        String petalsFlower = errPetalsFlower.getText();
        String type = "";
        if (errSingle.isSelected()) {
            type = "Hoa đơn";
        } else if (errBanyan.isSelected()) {
            type = "Hoa đa";
        }
        if (code.equals("") || name.equals("") || color.equals("") || amount.equals("") || subFlower.equals("") || petalsFlower.equals("") || type.equals("")) {
            return 1;
        } else {
            String regex = "[0-9]+";
            if (!subFlower.matches(regex) || !petalsFlower.matches(regex) || !amount.matches(regex)) {
                return 2;
            }
            for (listFlower flower : list) {
                if (code.equals(flower.getCode())) {
                    if (name.equals(flower.getName()) && type.equals(flower.getType())
                            && color.equals(flower.getColor())
                            && subFlower.equals(String.valueOf(flower.getsubFlowerNum()))
                            && petalsFlower.equals(String.valueOf(flower.getpetalsFlowerNum()))) {
                        ConnectToXampp.update(new listFlower(name, code, type, color, Integer.parseInt(amount) + flower.getAmount(), Integer.parseInt(petalsFlower), Integer.parseInt(subFlower), flower.getDay(), flower.getMonth(), flower.getYear()));
                        ConnectToXampp.insertImport(new listFlower(name, code, type, color, Integer.parseInt(amount), Integer.parseInt(petalsFlower), Integer.parseInt(subFlower), flower.getDay(), flower.getMonth(), flower.getYear()));
                        return 3;
                    }
                    errCode.setBorder(BorderFactory.createMatteBorder(1, 1, 1, 1, Color.red));
                    return 2;
                }
            }
            if (name.matches(regex) || color.matches(regex)) {
                return 2;
            }
        }
        return 0;
    }

    private int checkInputCin() {
        String code = cInCode.getText();
        String name = cInName.getText();
        String color = cInColor.getText();
        String amount = cInAmount.getText();
        int Am = Integer.parseInt(amount);
        String subFlower = cInSubflower.getText();
        String petalsFlower = cInPetalsFlower.getText();
        Calendar Cal = Calendar.getInstance();
        if (code.equals("") || name.equals("") || color.equals("") || amount.equals("") || subFlower.equals("") || petalsFlower.equals("") || typeFlower.equals("")) {
            return 1;
        } else {
            String regex = "[0-9]+";
            if (!subFlower.matches(regex) || !petalsFlower.matches(regex) || !amount.matches(regex)) {
                return 2;
            }
            for (listFlower flower : list) {
                if (code.equals(flower.getCode())) {
                    if (name.equals(flower.getName()) && typeFlower.equals(flower.getType())
                            && color.equals(flower.getColor())
                            && subFlower.equals(String.valueOf(flower.getsubFlowerNum()))
                            && petalsFlower.equals(String.valueOf(flower.getpetalsFlowerNum()))) {
                        ConnectToXampp.update(new listFlower(name, code, typeFlower, color, Integer.parseInt(amount) + flower.getAmount(), Integer.parseInt(petalsFlower), Integer.parseInt(subFlower), flower.getDay(), flower.getMonth(), flower.getYear()));
                        return 3;
                    }
                    cInCode.setBorder(BorderFactory.createMatteBorder(1, 1, 1, 1, Color.red));
                    return 2;
                }
            }
            if (name.matches(regex) || color.matches(regex)) {
                return 2;
            }
        }
        return 0;
    }

    private int checkInputCinExcel(listFlower listE) {
        String code = listE.getCode();
        String name = listE.getName();
        String color = listE.getColor();
        int amount = listE.getAmount();
        String sAmount = String.valueOf(amount);
        int subFlower = listE.getSubFlowerNum();
        String sSubFlower = String.valueOf(subFlower);
        int petalsFlower = listE.getPetalsFlowerNum();
        String sPetalsFlower = String.valueOf(petalsFlower);
        String type = listE.getType();
        if (amount <= 0) {
            listError floE = new listError(name, code, type, color, amount, petalsFlower, subFlower);
            this.listEr.add(floE);
            return 1;
        }
        if (code.equals("") || name.equals("") || color.equals("") || sAmount.equals("") || sSubFlower.equals("") || sPetalsFlower.equals("") || type.equals("")) {
            listError floE = new listError(name, code, type, color, amount, petalsFlower, subFlower);
            this.listEr.add(floE);
            return 1;
        } else {
            String regex = "[0-9]+";
            if (!sSubFlower.matches(regex) || !sPetalsFlower.matches(regex) || !sAmount.matches(regex)) {
                listError floE = new listError(name, code, type, color, amount, petalsFlower, subFlower);
                this.listEr.add(floE);
                return 1;
            }
            int i = 0;
            for (listFlower flower : list) {
                if (code.equals(flower.getCode())) {
                    i = 1;
                    if (name.equals(flower.getName()) && type.equals(flower.getType())
                            && color.equals(flower.getColor())
                            && sSubFlower.equals(String.valueOf(flower.getsubFlowerNum()))
                            && sPetalsFlower.equals(String.valueOf(flower.getpetalsFlowerNum()))) {
                        ConnectToXampp.update(new listFlower(name, code, type, color, amount + flower.getAmount(), petalsFlower, subFlower, flower.getDay(), flower.getMonth(), flower.getYear()));
                        ConnectToXampp.insertImport(new listFlower(name, code, type, color, amount, petalsFlower, subFlower, flower.getDay(), flower.getMonth(), flower.getYear()));
                        return 1;
                    }

                }
            }
            if (i == 1) {
                listError floE = new listError(name, code, type, color, amount, petalsFlower, subFlower);
                this.listEr.add(floE);
                return 1;
            }
        }
        return 0;
    }
//Nhập
    private void cInBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cInBtnActionPerformed
        String Code = cInCode.getText();
        String Name = cInName.getText();
        String Type = typeFlower;
        String Color = cInColor.getText();
        int Amount = Integer.parseInt(cInAmount.getText());
        int SubF = Integer.parseInt(cInSubflower.getText());
        int PetalsF = Integer.parseInt(cInPetalsFlower.getText());

        Calendar Cal = Calendar.getInstance();
        int year = Cal.get(Calendar.YEAR);
        int month = Cal.get(Calendar.MONTH) + 1;
        int day = Cal.get(Calendar.DAY_OF_MONTH);

        if (checkInputCin() == 1) {
            messFormCin.setText("Vui lòng điền đủ thông tin!");
            return;
        } else if (checkInputCin() == 2) {
            messFormCin.setText("Vui lòng kiểm tra lại thông tin");
            return;
        } else if (checkInputCin() == 3) {
            get_Data_From_SQL();
            return;
        } else {
            messFormCin.setText("");
        }

        String timnow = day + "/" + month + "/" + year;
        ConnectToXampp.insertImport(new listFlower(Name, Code, Type, Color, Amount, PetalsF, SubF, day, month, year));
        ConnectToXampp.insert(new listFlower(Name, Code, Type, Color, Amount, PetalsF, SubF, day, month, year));
        get_Data_From_SQL();
    }//GEN-LAST:event_cInBtnActionPerformed
//Xuất
    private void CoutBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CoutBtnActionPerformed
        Calendar Cal = Calendar.getInstance();
        int year = Cal.get(Calendar.YEAR);
        int month = Cal.get(Calendar.MONTH) + 1;
        int day = Cal.get(Calendar.DAY_OF_MONTH);
        String code = CoutCode.getText();
        int mark = 0;
        if (code.equals("") || typeFlowerEx.equals("") || CoutAmount.getText().equals("")) {
            JOptionPane.showMessageDialog(rootPane, "Vui lòng nhập đủ thông tin!");
            return;
        }
        int amount = Integer.parseInt(CoutAmount.getText());
        for (listFlower flower : list) {
            if (code.equals(flower.getCode()) && typeFlowerEx.equals(flower.getType())) {
                mark = 1;
                if (amount > flower.getAmount()) {
                    JOptionPane.showMessageDialog(rootPane, "Không đủ số lượng xuất!");
                    return;
                } else if (amount == flower.getAmount()) {
                    ConnectToXampp.delete(flower.getCode());
                    ConnectToXampp.insertExport(new listFlower(flower.getName(), flower.getCode(), typeFlowerEx, flower.getColor(), amount, flower.getpetalsFlowerNum(), flower.getSubFlowerNum(), day, month, year));
                } else {
                    ConnectToXampp.update(new listFlower(flower.getName(), flower.getCode(), typeFlowerEx, flower.getColor(), flower.getAmount() - amount, flower.getpetalsFlowerNum(), flower.getSubFlowerNum(), flower.getDay(), flower.getMonth(), flower.getYear()));
                    ConnectToXampp.insertExport(new listFlower(flower.getName(), flower.getCode(), typeFlowerEx, flower.getColor(), amount, flower.getpetalsFlowerNum(), flower.getSubFlowerNum(), day, month, year));
                }
                get_Data_From_SQL();
                resetFormCout();
                resetFormCoutS();
                return;
            }
        }
        if (mark == 0) {
            JOptionPane.showMessageDialog(rootPane, "Thông tin không chính xác!");
        }
    }//GEN-LAST:event_CoutBtnActionPerformed
//Xét radio
    private void cInBanyanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cInBanyanActionPerformed
        typeFlower = "Hoa đa";
        cInPetalsFlower.setText("0");
        cInBanyan.setSelected(true);
    }//GEN-LAST:event_cInBanyanActionPerformed

    private void cInSingleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cInSingleActionPerformed
        typeFlower = "Hoa đơn";
        cInSubflower.setText("0");
        cInSingle.setSelected(true);
    }//GEN-LAST:event_cInSingleActionPerformed

    private void cInPetalsFlowerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cInPetalsFlowerActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cInPetalsFlowerActionPerformed

    private void CoutAmountActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CoutAmountActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_CoutAmountActionPerformed

    private void btnExcelHomeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExcelHomeActionPerformed
        // TODO add your handling code here:
        try {
            JFileChooser jFileChooser = new JFileChooser();
            jFileChooser.showSaveDialog(this);
            File saveFile = jFileChooser.getSelectedFile();

            if (saveFile != null) {
                saveFile = new File(saveFile.toString() + ".xlsx");
                FileOutputStream out;
                try ( Workbook wb = new XSSFWorkbook()) {
                    Sheet sheet = wb.createSheet("Kho");
                    Row rowCol = sheet.createRow(0);
                    for (int i = 0; i < tableHome.getColumnCount(); i++) {
                        Cell cell = rowCol.createCell(i);
                        cell.setCellValue(tableHome.getColumnName(i));
                    }
                    for (int j = 0; j < tableHome.getRowCount(); j++) {
                        Row row = sheet.createRow(j + 1);
                        for (int k = 0; k < tableHome.getColumnCount(); k++) {
                            Cell cell = row.createCell(k);
                            if (tableHome.getValueAt(j, k) != null) {
                                cell.setCellValue(tableHome.getValueAt(j, k).toString());
                            }
                        }
                    }
                    out = new FileOutputStream(new File(saveFile.toString()));
                    wb.write(out);
                }
                out.close();
                openFile(saveFile.toString());
            } else {
                JOptionPane.showMessageDialog(null, "Error al generar archivo");
            }
        } catch (FileNotFoundException e) {
            System.out.println(e);
        } catch (IOException io) {
            System.out.println(io);
        }
    }//GEN-LAST:event_btnExcelHomeActionPerformed

    private void btnCinExcelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCinExcelActionPerformed
        try {
            JFileChooser jFileChooser = new JFileChooser();
            jFileChooser.showSaveDialog(this);
            File saveFile = jFileChooser.getSelectedFile();

            if (saveFile != null) {
                saveFile = new File(saveFile.toString() + ".xlsx");
                FileOutputStream out;
                try ( Workbook wb = new XSSFWorkbook()) {
                    Sheet sheet = wb.createSheet("LS_Nhap");
                    Row rowCol = sheet.createRow(0);
                    for (int i = 0; i < tableCin.getColumnCount(); i++) {
                        Cell cell = rowCol.createCell(i);
                        cell.setCellValue(tableCin.getColumnName(i));
                    }
                    for (int j = 0; j < tableCin.getRowCount(); j++) {
                        Row row = sheet.createRow(j + 1);
                        for (int k = 0; k < tableCin.getColumnCount(); k++) {
                            Cell cell = row.createCell(k);
                            if (tableCin.getValueAt(j, k) != null) {
                                cell.setCellValue(tableCin.getValueAt(j, k).toString());
                            }
                        }
                    }
                    out = new FileOutputStream(new File(saveFile.toString()));
                    wb.write(out);
                }
                out.close();
                openFile(saveFile.toString());
            } else {
                JOptionPane.showMessageDialog(null, "Error al generar archivo");
            }
        } catch (FileNotFoundException e) {
            System.out.println(e);
        } catch (IOException io) {
            System.out.println(io);
        }
// TODO add your handling code here:
    }//GEN-LAST:event_btnCinExcelActionPerformed

    private void btnCoutExcelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCoutExcelActionPerformed

        try {
            JFileChooser jFileChooser = new JFileChooser();
            jFileChooser.showSaveDialog(this);
            File saveFile = jFileChooser.getSelectedFile();

            if (saveFile != null) {
                saveFile = new File(saveFile.toString() + ".xlsx");
                FileOutputStream out;
                try ( Workbook wb = new XSSFWorkbook()) {
                    Sheet sheet = wb.createSheet("LS_Xuat");
                    Row rowCol = sheet.createRow(0);
                    for (int i = 0; i < tableCout.getColumnCount(); i++) {
                        Cell cell = rowCol.createCell(i);
                        cell.setCellValue(tableCout.getColumnName(i));
                    }
                    for (int j = 0; j < tableCout.getRowCount(); j++) {
                        Row row = sheet.createRow(j + 1);
                        for (int k = 0; k < tableCout.getColumnCount(); k++) {
                            Cell cell = row.createCell(k);
                            if (tableCout.getValueAt(j, k) != null) {
                                cell.setCellValue(tableCout.getValueAt(j, k).toString());
                            }
                        }
                    }
                    out = new FileOutputStream(new File(saveFile.toString()));
                    wb.write(out);
                }
                out.close();
                openFile(saveFile.toString());
            } else {
                JOptionPane.showMessageDialog(null, "Error al generar archivo");
            }
        } catch (FileNotFoundException e) {
            System.out.println(e);
        } catch (IOException io) {
            System.out.println(io);
        }// TODO add your handling code here:
    }//GEN-LAST:event_btnCoutExcelActionPerformed

    private void coutSingleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_coutSingleActionPerformed
        typeFlowerEx = "Hoa đơn";
        cInSubflower.setText("0");
        coutSingle.setSelected(true);
    }//GEN-LAST:event_coutSingleActionPerformed

    private void coutBanyanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_coutBanyanActionPerformed
        typeFlowerEx = "Hoa đa";
        cInPetalsFlower.setText("0");
        coutBanyan.setSelected(true);
    }//GEN-LAST:event_coutBanyanActionPerformed

    private void CoutCodeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CoutCodeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_CoutCodeActionPerformed

    private void cInResetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cInResetActionPerformed
        setformCinNULL();
    }//GEN-LAST:event_cInResetActionPerformed

    private void CoutResetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CoutResetActionPerformed
        setformCoutNULL();
    }//GEN-LAST:event_CoutResetActionPerformed

    private void tableCinMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableCinMouseClicked
        int selectRow = tableCin.getSelectedRow();
        if (selectRow >= 0) {
            String code = (String) tableCin.getValueAt(selectRow, 0);
            String name = (String) tableCin.getValueAt(selectRow, 1);
            String type = (String) tableCin.getValueAt(selectRow, 2);
            typeFlower = type;
            String color = (String) tableCin.getValueAt(selectRow, 3);
            String amount = (String) (tableCin.getValueAt(selectRow, 6) + "");
            String subFlower = (String) (tableCin.getValueAt(selectRow, 4) + "");
            String petalsFlower = (String) (tableCin.getValueAt(selectRow, 5) + "");
            cInCode.setText(code);
            cInName.setText(name);
            if (typeFlower.equals("Hoa đơn")) {
                cInSingle.setSelected(true);
            } else if (typeFlower.equals("Hoa đa")) {
                cInBanyan.setSelected(true);
            }
            cInColor.setText(color);
            cInAmount.setText(amount);
            cInSubflower.setText(subFlower);
            cInPetalsFlower.setText(petalsFlower);
        }
    }//GEN-LAST:event_tableCinMouseClicked

    private void cInCodeKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cInCodeKeyReleased
        String code = cInCode.getText();
        for (listFlower flower : list) {
            System.out.println(flower.getCode());
            System.out.println(cInCode.getText());
            if (code.equals(flower.getCode())) {
                cInCode.setBorder(BorderFactory.createMatteBorder(1, 1, 1, 1, Color.red));
                messFormCin.setText("Mã hoa đã tồn tại!");
                return;
            } else {
                cInCode.setBorder(BorderFactory.createEmptyBorder(1, 10, 1, 1));
                messFormCin.setText("");
            }
        }
    }//GEN-LAST:event_cInCodeKeyReleased

    private void cInSubflowerKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cInSubflowerKeyReleased
        String regex = "[0-9]+";
        if (!cInSubflower.getText().matches(regex) && !cInSubflower.getText().equals("")) {
            cInSubflower.setBorder(BorderFactory.createMatteBorder(1, 1, 1, 1, Color.red));
            messFormCin.setText("Số cánh hoa phải là số nguyên dương");
        } else {
            cInSubflower.setBorder(BorderFactory.createEmptyBorder(1, 10, 1, 1));
            messFormCin.setText("");
        }
    }//GEN-LAST:event_cInSubflowerKeyReleased

    private void cInPetalsFlowerKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cInPetalsFlowerKeyReleased
        String regex = "[0-9]+";
        if (!cInPetalsFlower.getText().matches(regex) && !cInPetalsFlower.getText().equals("")) {
            cInPetalsFlower.setBorder(BorderFactory.createMatteBorder(1, 1, 1, 1, Color.red));
            messFormCin.setText("Số cánh hoa phải là số nguyên dương");
        } else {
            cInPetalsFlower.setBorder(BorderFactory.createEmptyBorder(1, 10, 1, 1));
            messFormCin.setText("");
        }
    }//GEN-LAST:event_cInPetalsFlowerKeyReleased

    private void cInAmountKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cInAmountKeyReleased
        String regex = "[0-9]+";
        if (!cInAmount.getText().matches(regex) && !cInAmount.getText().equals("")) {
            cInAmount.setBorder(BorderFactory.createMatteBorder(1, 1, 1, 1, Color.red));
            messFormCin.setText("Số cánh hoa phải là số nguyên dương");
        } else {
            cInAmount.setBorder(BorderFactory.createEmptyBorder(1, 10, 1, 1));
            messFormCin.setText("");
        }
    }//GEN-LAST:event_cInAmountKeyReleased

    private void cInColorKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cInColorKeyReleased
        String regex = "[0-9]+";
        if (!cInColor.getText().matches(regex) && !cInColor.getText().equals("")) {
            cInColor.setBorder(BorderFactory.createEmptyBorder(1, 10, 1, 1));
            messFormCin.setText("");
        } else {
            cInColor.setBorder(BorderFactory.createMatteBorder(1, 1, 1, 1, Color.red));
            messFormCin.setText("Màu sắc hợp lệ");
        }
    }//GEN-LAST:event_cInColorKeyReleased

    private void cInNameKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cInNameKeyReleased
        String regex = "[0-9]+";
        if (!cInName.getText().matches(regex) && !cInName.getText().equals("")) {
            cInName.setBorder(BorderFactory.createEmptyBorder(1, 10, 1, 1));
            messFormCin.setText("");
        } else {
            cInName.setBorder(BorderFactory.createMatteBorder(1, 1, 1, 1, Color.red));
            messFormCin.setText("Tên hoa không hợp lệ");
        }
    }//GEN-LAST:event_cInNameKeyReleased

    private void cInCodeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cInCodeMouseClicked
        String code = cInCode.getText();
        for (listFlower flower : list) {
            System.out.println(flower.getCode());
            System.out.println(cInCode.getText());
            if (code.equals(flower.getCode())) {
                cInCode.setBorder(BorderFactory.createMatteBorder(1, 1, 1, 1, Color.red));
                messFormCin.setText("Mã hoa đã tồn tại!");
                return;
            } else {
                cInCode.setBorder(BorderFactory.createEmptyBorder(1, 10, 1, 1));
                messFormCin.setText("");
            }
        }
    }//GEN-LAST:event_cInCodeMouseClicked

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        try {
            JFileChooser jFileChooser = new JFileChooser();
            jFileChooser.showSaveDialog(this);
            File saveFile = jFileChooser.getSelectedFile();
            excelToList(saveFile);
        } catch (HeadlessException | IOException e) {
            System.out.println(e);
        }

        // TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed

    private void btnExcelErrActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExcelErrActionPerformed
        try {
            JFileChooser jFileChooser = new JFileChooser();
            jFileChooser.showSaveDialog(this);
            File saveFile = jFileChooser.getSelectedFile();

            if (saveFile != null) {
                saveFile = new File(saveFile.toString() + ".xlsx");
                FileOutputStream out;
                try ( Workbook wb = new XSSFWorkbook()) {
                    Sheet sheet = wb.createSheet("LS_Xuat");
                    Row rowCol = sheet.createRow(0);
                    for (int i = 0; i < tableError.getColumnCount(); i++) {
                        Cell cell = rowCol.createCell(i);
                        cell.setCellValue(tableError.getColumnName(i));
                    }
                    for (int j = 0; j < tableError.getRowCount(); j++) {
                        Row row = sheet.createRow(j + 1);
                        for (int k = 0; k < tableError.getColumnCount(); k++) {
                            Cell cell = row.createCell(k);
                            if (tableError.getValueAt(j, k) != null) {
                                cell.setCellValue(tableError.getValueAt(j, k).toString());
                            }
                        }
                    }
                    out = new FileOutputStream(new File(saveFile.toString()));
                    wb.write(out);
                }
                out.close();
                openFile(saveFile.toString());
            } else {
                JOptionPane.showMessageDialog(null, "Error al generar archivo");
            }
        } catch (FileNotFoundException e) {
            System.out.println(e);
        } catch (IOException io) {
            System.out.println(io);
        }        // TODO add your handling code here:
    }//GEN-LAST:event_btnExcelErrActionPerformed

    private void tableErrorMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableErrorMouseClicked
        int selectRow = tableError.getSelectedRow();

        if (selectRow >= 0) {
            String code = (String) tableError.getValueAt(selectRow, 0);
            String name = (String) tableError.getValueAt(selectRow, 1);
            String type = (String) tableError.getValueAt(selectRow, 2);
            String color = (String) tableError.getValueAt(selectRow, 3);
            String amount = (String) (tableError.getValueAt(selectRow, 6) + "");
            String subFlower = (String) (tableError.getValueAt(selectRow, 4) + "");
            String petalsFlower = (String) (tableError.getValueAt(selectRow, 5) + "");
            String regex = "[0-9]+";
            errCode.setText(code);
            errName.setText(name);
            errColor.setText(color);
            errAmount.setText(amount);
            errPetalsFlower.setText(petalsFlower);
            errSubflower.setText(subFlower);
            if (type.equals("Hoa đơn")) {
                errSingle.setSelected(true);
                errBanyan.setSelected(false);
            } else if (type.equals("Hoa đa")) {
                errSingle.setSelected(false);
                errBanyan.setSelected(true);
            } else {
                buttonGroup2.clearSelection();
            }
            if (code.equals("") || name.equals("") || type.equals("") || color.equals("") || amount.equals("") || subFlower.equals("") || petalsFlower.equals("")) {
                JOptionPane.showMessageDialog(rootPane, "Thông tin hoa không đầy đủ!");
                return;
            }
            if (name.matches(regex)) {
                JOptionPane.showMessageDialog(rootPane, "Tên hoa không hợp lệ!");
                return;
            }
            if (!type.equals("Hoa đơn") && !type.equals("Hoa đa")) {
                JOptionPane.showMessageDialog(rootPane, "Loại hoa không hợp lệ");
                return;
            }
            if (type.equals("Hoa đơn") && Integer.parseInt(petalsFlower) == 0) {
                JOptionPane.showMessageDialog(rootPane, "Số cánh hoa của hoa đơn phải khác 0!");
                return;
            }
            if (type.equals("Hoa đa") && Integer.parseInt(subFlower) == 0) {
                JOptionPane.showMessageDialog(rootPane, "Số hoa con của hoa đa phải khác 0!");
                return;
            }
            if (Integer.parseInt(amount) <= 0) {
                JOptionPane.showMessageDialog(rootPane, "Số lượng nhập vào phải lớn hơn 0!");
            }

        }
        // TODO add your handling code here:
    }//GEN-LAST:event_tableErrorMouseClicked

    private void tbHistoryExportMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbHistoryExportMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_tbHistoryExportMouseClicked

    private void btnLogoutMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnLogoutMouseClicked
        vLogin = new ViewLogin();
        this.setVisible(false);
        vLogin.setVisible(true);
        // TODO add your handling code here:
    }//GEN-LAST:event_btnLogoutMouseClicked

    private void btnEditMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnEditMouseClicked
        // TODO add your handling code here:
        formHome.setVisible(false);
        formEdit.setVisible(true);
        formDelete.setVisible(false);
        formCinHistory.setVisible(false);
        formCoutHistory.setVisible(false);
        formErr.setVisible(false);
    }//GEN-LAST:event_btnEditMouseClicked

    private void btnRemoveMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnRemoveMouseClicked
        // TODO add your handling code here:
        formHome.setVisible(false);
        formEdit.setVisible(false);
        formDelete.setVisible(true);
        formCinHistory.setVisible(false);
        formCoutHistory.setVisible(false);
        formErr.setVisible(false);
        formTableCoutS.setVisible(false);
        formCout.setVisible(true);
        formCoutS.setVisible(false);
        resetFormCout();
        resetFormCoutS();
    }//GEN-LAST:event_btnRemoveMouseClicked

    private void btnHistoryImpMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnHistoryImpMouseClicked
        formHome.setVisible(false);
        formEdit.setVisible(false);
        formDelete.setVisible(false);
        formCinHistory.setVisible(true);
        formCoutHistory.setVisible(false);
        formErr.setVisible(false);
        getDataImport();
    }//GEN-LAST:event_btnHistoryImpMouseClicked

    private void btnHistoryEmpMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnHistoryEmpMouseClicked
        formHome.setVisible(false);
        formEdit.setVisible(false);
        formDelete.setVisible(false);
        formCinHistory.setVisible(false);
        formCoutHistory.setVisible(true);
        formErr.setVisible(false);
        getDataExport();
    }//GEN-LAST:event_btnHistoryEmpMouseClicked

    private void btnHomeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnHomeMouseClicked
        // TODO add your handling code here:
        formHome.setVisible(true);
        formEdit.setVisible(false);
        formDelete.setVisible(false);
        formCinHistory.setVisible(false);
        formCoutHistory.setVisible(false);
        formErr.setVisible(false);
    }//GEN-LAST:event_btnHomeMouseClicked

    private void btnErrListMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnErrListMouseClicked
        formHome.setVisible(false);
        formEdit.setVisible(false);
        formDelete.setVisible(false);
        formCinHistory.setVisible(false);
        formCoutHistory.setVisible(false);
        formErr.setVisible(true);
        // TODO add your handling code here:
    }//GEN-LAST:event_btnErrListMouseClicked

    private void errBanyanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_errBanyanActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_errBanyanActionPerformed

    private void errSingleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_errSingleActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_errSingleActionPerformed

    private void errAmountKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_errAmountKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_errAmountKeyReleased

    private void errPetalsFlowerKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_errPetalsFlowerKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_errPetalsFlowerKeyReleased

    private void errPetalsFlowerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_errPetalsFlowerActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_errPetalsFlowerActionPerformed

    private void errSubflowerKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_errSubflowerKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_errSubflowerKeyReleased

    private void errColorKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_errColorKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_errColorKeyReleased

    private void errNameKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_errNameKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_errNameKeyReleased

    private void errCodeKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_errCodeKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_errCodeKeyReleased

    private void errCodeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_errCodeMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_errCodeMouseClicked

    private void errCinButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_errCinButtonActionPerformed
        String Code = errCode.getText();
        String Name = errName.getText();
        String Type = "";
        int index = 0;
        if (errSingle.isSelected()) {
            Type = "Hoa đơn";
        } else {
            Type = "Hoa đa";
        }

        String Color = errColor.getText();
        int Amount = Integer.parseInt(errAmount.getText());
        int SubF = Integer.parseInt(errSubflower.getText());
        int PetalsF = Integer.parseInt(errPetalsFlower.getText());
        Calendar Cal = Calendar.getInstance();
        int year = Cal.get(Calendar.YEAR);
        int month = Cal.get(Calendar.MONTH) + 1;
        int day = Cal.get(Calendar.DAY_OF_MONTH);
        if (Type.equals("Hoa đơn") && PetalsF == 0) {
            JOptionPane.showMessageDialog(rootPane, "Số cánh hoa của hoa đơn phải khác 0!");
            return;
        }
        if (Type.equals("Hoa đa") && SubF == 0) {
            JOptionPane.showMessageDialog(rootPane, "Số hoa con của hoa đa phải khác 0!");
            return;
        }
        if (Amount <= 0) {
            JOptionPane.showMessageDialog(rootPane, "Số lượng nhập vào phải lớn hơn 0!");
        }
        for (listError err : listEr) {
            if (Code.equals(err.getCode())) {
                break;
            }
            index++;
        }
        int results = checkInputCinErr();
        if (results == 1) {
            JOptionPane.showMessageDialog(rootPane, "Vui lòng điền đủ thông tin!");
            return;
        } else if (results == 2) {
            JOptionPane.showMessageDialog(rootPane, "Vui lòng kiểm tra lại thông tin");
            return;
        } else if (results == 3) {
            get_Data_From_SQL();
            JOptionPane.showMessageDialog(rootPane, "Nhập thành công!");
            RenderDataOnTableErr();
            return;
        }
        ConnectToXampp.insertImport(new listFlower(Name, Code, Type, Color, Amount, PetalsF, SubF, day, month, year));
        ConnectToXampp.insert(new listFlower(Name, Code, Type, Color, Amount, PetalsF, SubF, day, month, year));
        get_Data_From_SQL();
        listEr.remove(index);
        index = 0;
        RenderDataOnTableErr();
        JOptionPane.showMessageDialog(rootPane, "Nhập thành công!");
    }//GEN-LAST:event_errCinButtonActionPerformed

    private void errClearButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_errClearButtonActionPerformed
        errCode.setText("");
        errName.setText("");
        errColor.setText("");
        errAmount.setText("");
        errPetalsFlower.setText("");
        errBanyan.setText("");
        buttonGroup1.clearSelection();
        // TODO add your handling code here:
    }//GEN-LAST:event_errClearButtonActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        resetFormCout();
        formCout.setVisible(true);
        formCoutS.setVisible(false);
        formTableCoutS.setVisible(false);
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        resetFormCoutS();
        formCout.setVisible(false);
        formCoutS.setVisible(true);
        formTableCoutS.setVisible(true);
    }//GEN-LAST:event_jButton5ActionPerformed

    private void CoutAmountSActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CoutAmountSActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_CoutAmountSActionPerformed
    private void resetFormCout() {
        CoutCode.setText("");
        CoutAmount.setText("");
        buttonGroup1.clearSelection();
    }

    private void resetFormCoutS() {
        CoutCodeS.setText("");
        CoutAmountS.setText("");
        buttonGroup1.clearSelection();
    }
    private void coutBanyanSActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_coutBanyanSActionPerformed
        typeFlowerExS = "Hoa đa";
        coutSingleS.setSelected(false);
        coutBanyanS.setSelected(true);
    }//GEN-LAST:event_coutBanyanSActionPerformed

    private void coutSingleSActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_coutSingleSActionPerformed
        typeFlowerExS = "Hoa đơn";
        coutSingleS.setSelected(true);
        coutBanyanS.setSelected(false);
    }//GEN-LAST:event_coutSingleSActionPerformed

    private void CoutCodeSActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CoutCodeSActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_CoutCodeSActionPerformed

    private void tableCoutMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableCoutMouseClicked
        int selected = tableCout.getSelectedRow();
        if (selected >= 0) {
            String code = (String) tableCout.getValueAt(selected, 0);
            String type = (String) tableCout.getValueAt(selected, 2);
            String amount = (String) (tableCout.getValueAt(selected, 6) + "");

            typeFlowerEx = type;
            CoutCode.setText(code);
            if (typeFlowerEx.equals("Hoa đơn")) {
                coutSingle.setSelected(true);
            } else if (typeFlowerEx.equals("Hoa đa")) {
                coutBanyan.setSelected(true);
            }
            CoutAmount.setText(amount);

            typeFlowerExS = type;
            CoutCodeS.setText(code);
            if (typeFlowerExS.equals("Hoa đơn")) {
                coutSingleS.setSelected(true);
            } else if (typeFlowerExS.equals("Hoa đa")) {
                coutBanyanS.setSelected(true);
            }
            CoutAmountS.setText(amount);

        }
    }//GEN-LAST:event_tableCoutMouseClicked

    private void CoutResetSActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CoutResetSActionPerformed
        buttonGroup1.clearSelection();
        CoutCodeS.setText("");
        CoutAmountS.setText("");
    }//GEN-LAST:event_CoutResetSActionPerformed
    private int checkAmountCout(int amountWareHouse, int amount) {
        if (!listCoutTmp.isEmpty()) {
            int index = 0;
            for (listFlower flower : listCoutTmp) {
                if (flower.getCode().equals(CoutCodeS.getText())) {
                    if (amountWareHouse >= (flower.getAmount() + amount)) {
                        int tmp = flower.getAmount();
                        listCoutTmp.remove(index);
                        return tmp + amount;
                    } else {
                        return 0;
                    }
                }
                index++;
            }
        }
        return 2;
    }
    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        DefaultTableModel table = new DefaultTableModel();
        tableCoutS.setModel(table);
        table.addColumn("Mã hoa");
        table.addColumn("Tên hoa");
        table.addColumn("Loại hoa");
        table.addColumn("Màu sắc");
        table.addColumn("Số hoa con");
        table.addColumn("Số cánh hoa");
        table.addColumn("Số lượng");
        table.addColumn("Thời gian nhập");
        int mark = 0;
        for (listFlower flower : list) {
            if (CoutCodeS.getText().equals(flower.getCode()) && typeFlowerExS.equals(flower.getType()) && Integer.parseInt(CoutAmountS.getText()) <= flower.getAmount()) {
                int result = checkAmountCout(flower.getAmount(), Integer.parseInt(CoutAmountS.getText()));
                if (result == 0) {
                    for (listFlower fl : listCoutTmp) {
                        table.addRow(new Object[]{fl.getCode(), fl.getName(), fl.getType(), fl.getColor(), fl.getSubFlowerNum(), fl.getPetalsFlowerNum(), fl.getAmount()});
                    }
                    JOptionPane.showMessageDialog(rootPane, "Không đủ số lượng để xuất!");
                    return;
                }
                if (result != 0 && result != 2) {
                    listCoutTmp.add(new listFlower(flower.getName(), flower.getCode(), flower.getType(), flower.getColor(), result, flower.getPetalsFlowerNum(), flower.getSubFlowerNum(), 0, 0, 0));
                }
                if (result == 2) {
                    listCoutTmp.add(new listFlower(flower.getName(), flower.getCode(), flower.getType(), flower.getColor(), Integer.parseInt(CoutAmountS.getText()), flower.getPetalsFlowerNum(), flower.getSubFlowerNum(), 0, 0, 0));
                }
                mark = 1;
            }
        }
        if (mark == 0) {
            JOptionPane.showMessageDialog(rootPane, "Thông tin không chính xác!");
        }
        for (listFlower flower : listCoutTmp) {
            table.addRow(new Object[]{flower.getCode(), flower.getName(), flower.getType(), flower.getColor(), flower.getSubFlowerNum(), flower.getPetalsFlowerNum(), flower.getAmount()});
        }

    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        Calendar Cal = Calendar.getInstance();
        int year = Cal.get(Calendar.YEAR);
        int month = Cal.get(Calendar.MONTH) + 1;
        int day = Cal.get(Calendar.DAY_OF_MONTH);
        for (listFlower flower : listCoutTmp) {
            for (listFlower fl : list) {
                if (flower.getCode().equals(fl.getCode())) {
                    if (fl.getAmount() == flower.getAmount()) {
                        ConnectToXampp.delete(fl.getCode());
                        ConnectToXampp.insertExport(new listFlower(flower.getName(), flower.getCode(), flower.getType(), flower.getColor(), flower.getAmount(), flower.getPetalsFlowerNum(), flower.getSubFlowerNum(), day, month, year));
                    } else {
                        ConnectToXampp.update(new listFlower(fl.getName(), fl.getCode(), fl.getType(), fl.getColor(), fl.getAmount() - flower.getAmount(), fl.getPetalsFlowerNum(), fl.getSubFlowerNum(), day, month, year));
                        ConnectToXampp.insertExport(new listFlower(flower.getName(), flower.getCode(), flower.getType(), flower.getColor(), flower.getAmount(), flower.getPetalsFlowerNum(), flower.getSubFlowerNum(), day, month, year));
                    }
                }
            }
        }
        resetFormCout();
        resetFormCoutS();
        get_Data_From_SQL();
        DefaultTableModel table = new DefaultTableModel();
        tableCoutS.setModel(table);
        table.addColumn("Mã hoa");
        table.addColumn("Tên hoa");
        table.addColumn("Loại hoa");
        table.addColumn("Màu sắc");
        table.addColumn("Số hoa con");
        table.addColumn("Số cánh hoa");
        table.addColumn("Số lượng");
        table.addColumn("Thời gian nhập");
        listCoutTmp.removeAll(listCoutTmp);
    }//GEN-LAST:event_jButton7ActionPerformed

    private void tableCoutSMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableCoutSMouseClicked

        int selected = tableCoutS.getSelectedRow();
        if (selected >= 0) {
            String code = (String) tableCoutS.getValueAt(selected, 0);
            int a = JOptionPane.showConfirmDialog(this, "Bạn có muốn xóa dòng đã chọn?", "", JOptionPane.YES_NO_CANCEL_OPTION);
            if (a == 0) {
                int index = 0;

                for (listFlower fl : listCoutTmp) {
                    if (fl.getCode().equals(code)) {
                        listCoutTmp.remove(index);
                        DefaultTableModel table = new DefaultTableModel();
                        tableCoutS.setModel(table);
                        table.addColumn("Mã hoa");
                        table.addColumn("Tên hoa");
                        table.addColumn("Loại hoa");
                        table.addColumn("Màu sắc");
                        table.addColumn("Số hoa con");
                        table.addColumn("Số cánh hoa");
                        table.addColumn("Số lượng");
                        table.addColumn("Thời gian nhập");
                        for (listFlower flower : listCoutTmp) {
                            table.addRow(new Object[]{flower.getCode(), flower.getName(), flower.getType(), flower.getColor(), flower.getSubFlowerNum(), flower.getPetalsFlowerNum(), flower.getAmount()});
                        }
                        return;
                    }
                    index++;
                }
            }
        }
    }//GEN-LAST:event_tableCoutSMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ViewNhanVien.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new ViewNhanVien().setVisible(true);
        });
    }

    public void openFile(String file) {
        try {
            File path = new File(file);
            Desktop.getDesktop().open(path);
        } catch (IOException ioe) {
            System.out.println(ioe);
        }
    }

    private void setVisibleErr() {
        formHome.setVisible(false);
        formEdit.setVisible(false);
        formDelete.setVisible(false);
        formCinHistory.setVisible(false);
        formCoutHistory.setVisible(false);
        formErr.setVisible(true);

    }

    private void RenderDataOnTableErr() {
        DefaultTableModel table = new DefaultTableModel();
        tableError.setModel(table);
        table.addColumn("Mã hoa");
        table.addColumn("Tên hoa");
        table.addColumn("Loại hoa");
        table.addColumn("Màu sắc");
        table.addColumn("Số hoa con");
        table.addColumn("Số cánh hoa");
        table.addColumn("Số lượng");

        for (listError flower : listEr) {
            table.addRow(new Object[]{flower.getCode(), flower.getName(), flower.getType(), flower.getColor(), flower.getSubFlowerNum(), flower.getPetalsFlowerNum(), flower.getAmount()});
        }
    }

    public void excelToList(File saveFile) throws IOException {

        if (saveFile != null) {
            Calendar Cal = Calendar.getInstance();
            int year = Cal.get(Calendar.YEAR);
            int month = Cal.get(Calendar.MONTH) + 1;
            int day = Cal.get(Calendar.DAY_OF_MONTH);

            FileInputStream fileInputStream = new FileInputStream(saveFile);
            Workbook workbook = new XSSFWorkbook(fileInputStream);
            Sheet sheet = workbook.getSheetAt(0);
            int lastRowNumber = sheet.getLastRowNum();

            ArrayList<listFlower> listTemp = new ArrayList<>();
            for (int i = 1; i <= lastRowNumber; i++) {
                Row row = sheet.getRow(i);
                Cell codeCell = row.getCell(0);
                String code = codeCell.getStringCellValue().trim();

                Cell nameCell = row.getCell(1);
                String name = nameCell.getStringCellValue().trim();

                Cell typeCell = row.getCell(2);
                String type = typeCell.getStringCellValue().trim();

                Cell colorCell = row.getCell(3);
                String color = colorCell.getStringCellValue().trim();

                Cell amountCell = row.getCell(6);
                String amount = String.valueOf(amountCell.getNumericCellValue());
                int intAmount = Double.valueOf(amount + "").intValue();
                Cell subsCell = row.getCell(4);
                Cell petalsCell = row.getCell(5);
                switch (type) {
                    case "Hoa đơn" -> {

                        String petals = String.valueOf(petalsCell.getNumericCellValue());
                        int intPetals = Double.valueOf(petals).intValue();
                        String subs = String.valueOf(subsCell.getNumericCellValue());
                        int intSubs = Double.valueOf(subs).intValue();
                        if (intPetals == 0) {
                            listError er = new listError(name, code, type, color, intAmount, intPetals, intSubs);
                            listEr.add(er);
                            continue;
                        }
                        listFlower flo = new listFlower(name, code, type, color, intAmount, intPetals, intSubs, day, month, year);
                        listTemp.add(flo);
                        break;
                    }
                    case "Hoa đa" -> {

                        String subs = String.valueOf(subsCell.getNumericCellValue());
                        int intSubs = Double.valueOf(subs).intValue();
                        String petals = String.valueOf(petalsCell.getNumericCellValue());
                        int intPetals = Double.valueOf(petals).intValue();
                        if (intSubs == 0) {
                            listError er = new listError(name, code, type, color, intAmount, intPetals, intSubs);
                            listEr.add(er);
                            continue;
                        }
                        listFlower flo = new listFlower(name, code, type, color, intAmount, intPetals, intSubs, day, month, year);
                        listTemp.add(flo);
                        break;
                    }
                    default -> {
                        String petals = String.valueOf(petalsCell.getNumericCellValue());
                        int intPetals = Double.valueOf(petals).intValue();
                        String subs = String.valueOf(subsCell.getNumericCellValue());
                        int intSubs = Double.valueOf(subs).intValue();
                        listError er = new listError(name, code, type, color, intAmount, intPetals, intSubs);
                        listEr.add(er);
                    }
                }

            }
            for (listFlower flower : listTemp) {
                if (checkInputCinExcel(flower) == 0) {
                    ConnectToXampp.insertImport(flower);
                    ConnectToXampp.insert(flower);

                }
            }
            if (!listEr.isEmpty()) {
                int a = JOptionPane.showConfirmDialog(this, "Có sản phẩm nhập bị lỗi, bạn có muốn kiểm tra không?", "", JOptionPane.YES_NO_CANCEL_OPTION);
                if (a == 0) {
                    setVisibleErr();
                    RenderDataOnTableErr();
                }
            }

        }
        get_Data_From_SQL();
    }

    private void deleteRowTable(JTable table) {
        DefaultTableModel tb = (DefaultTableModel) table.getModel();
        int count = table.getRowCount();
        for (int i = 0; i < count; i++) {
            tb.removeRow(count - 1 - i);
        }
    }

    private void setformCinNULL() {
        cInCode.setText("");
        cInName.setText("");
        cInAmount.setText("");
        cInColor.setText("");
        cInSubflower.setText("");
        cInPetalsFlower.setText("");
        cinButtonGroup.clearSelection();
        typeFlower = "";
    }

    private void setformCoutNULL() {
        CoutCode.setText("");
        coutButtonGroup.clearSelection();
        CoutAmount.setText("");
        typeFlowerEx = "";
    }

    private void get_Data_From_SQL() {
        List<singleFlower> listSfl = new ArrayList<>();
        List<banyanFlower> listBfl = new ArrayList<>();
        list = ConnectToXampp.findAll();
        for (listFlower flower : list) {
            if (flower.getType().equals("Hoa đơn")) {
                listSfl.add(new singleFlower(flower.getpetalsFlowerNum(), flower.getName(), flower.getCode(), flower.getType(), flower.getAmount(), flower.getColor()));
            } else if (flower.getType().equals("Hoa đa")) {
                listBfl.add(new banyanFlower(flower.getsubFlowerNum(), flower.getName(), flower.getCode(), flower.getType(), flower.getAmount(), flower.getColor()));
            }
        }
        RenderDataOnTableHome(listSfl, listBfl);
        RenderDataOnTableCin(listSfl, listBfl);
        RenderDataOnTableCout(listSfl, listBfl);
    }

    private void RenderDataOnTableHome(List<singleFlower> listSfl, List<banyanFlower> listBfl) {
        Collections.sort(listBfl, (banyanFlower o1, banyanFlower o2) -> o1.getAmount() < o2.getAmount() ? -1 : 1);
        Collections.sort(listSfl, (singleFlower o1, singleFlower o2) -> {
            return o1.getAmount() < o2.getAmount() ? -1 : 1;
        });
        DefaultTableModel table = new DefaultTableModel();
        tableHome.setModel(table);
        table.addColumn("Mã hoa");
        table.addColumn("Tên hoa");
        table.addColumn("Loại hoa");
        table.addColumn("Màu sắc");
        table.addColumn("Số hoa con");
        table.addColumn("Số cánh hoa");
        table.addColumn("Số lượng");
        for (singleFlower flower : listSfl) {
            flower.getCode();
            table.addRow(new Object[]{flower.getCode(), flower.getName(), flower.getType(), flower.getColor(), 0, flower.getPetalsFlowerNum(), flower.getAmount()});
        }
        for (banyanFlower flower : listBfl) {
            table.addRow(new Object[]{flower.getCode(), flower.getName(), flower.getType(), flower.getColor(), flower.getSubFlowerNum(), 0, flower.getAmount()});
        }
    }

    private void RenderDataOnTableCin(List<singleFlower> listSfl, List<banyanFlower> listBfl) {
        Collections.sort(listBfl, (banyanFlower o1, banyanFlower o2) -> o1.getAmount() < o2.getAmount() ? -1 : 1);
        Collections.sort(listSfl, (singleFlower o1, singleFlower o2) -> {
            return o1.getAmount() < o2.getAmount() ? -1 : 1;
        });
        DefaultTableModel table = new DefaultTableModel();
        tableCin.setModel(table);
        table.addColumn("Mã hoa");
        table.addColumn("Tên hoa");
        table.addColumn("Loại hoa");
        table.addColumn("Màu sắc");
        table.addColumn("Số hoa con");
        table.addColumn("Số cánh hoa");
        table.addColumn("Số lượng");
        for (singleFlower flower : listSfl) {
            table.addRow(new Object[]{flower.getCode(), flower.getName(), flower.getType(), flower.getColor(), 0, flower.getPetalsFlowerNum(), flower.getAmount()});
        }
        for (banyanFlower flower : listBfl) {
            table.addRow(new Object[]{flower.getCode(), flower.getName(), flower.getType(), flower.getColor(), flower.getSubFlowerNum(), 0, flower.getAmount()});
        }
    }

    private void RenderDataOnTableCout(List<singleFlower> listSfl, List<banyanFlower> listBfl) {
        Collections.sort(listBfl, (banyanFlower o1, banyanFlower o2) -> o1.getAmount() < o2.getAmount() ? -1 : 1);
        Collections.sort(listSfl, (singleFlower o1, singleFlower o2) -> {
            return o1.getAmount() < o2.getAmount() ? -1 : 1;
        });
        DefaultTableModel table = new DefaultTableModel();
        tableCout.setModel(table);
        table.addColumn("Mã hoa");
        table.addColumn("Tên hoa");
        table.addColumn("Loại hoa");
        table.addColumn("Màu sắc");
        table.addColumn("Số hoa con");
        table.addColumn("Số cánh hoa");
        table.addColumn("Số lượng");
        for (singleFlower flower : listSfl) {
            table.addRow(new Object[]{flower.getCode(), flower.getName(), flower.getType(), flower.getColor(), 0, flower.getPetalsFlowerNum(), flower.getAmount()});
        }
        for (banyanFlower flower : listBfl) {
            table.addRow(new Object[]{flower.getCode(), flower.getName(), flower.getType(), flower.getColor(), flower.getSubFlowerNum(), 0, flower.getAmount()});
        }
    }

    private void getDataImport() {
        listImport = ConnectToXampp.findAllImport();
        RenderDataOnTableHistoryImport();
    }

    private void RenderDataOnTableHistoryImport() {
        DefaultTableModel table = new DefaultTableModel();
        tbHistoryImport.setModel(table);
        table.addColumn("Mã hoa");
        table.addColumn("Tên hoa");
        table.addColumn("Loại hoa");
        table.addColumn("Màu sắc");
        table.addColumn("Số hoa con");
        table.addColumn("Số cánh hoa");
        table.addColumn("Số lượng");
        table.addColumn("Thời gian nhập");

        for (listFlower flower : listImport) {
            String time = flower.getDay() + "/" + flower.getMonth() + "/" + flower.getYear();
            table.addRow(new Object[]{flower.getCode(), flower.getName(), flower.getType(), flower.getColor(), flower.getSubFlowerNum(), flower.getPetalsFlowerNum(), flower.getAmount(), time});
        }
    }

    private void getDataExport() {
        listExport = ConnectToXampp.findAllExport();
        RenderDataOnTableHistoryExport();
    }

    private void RenderDataOnTableHistoryExport() {
        DefaultTableModel table = new DefaultTableModel();
        tbHistoryExport.setModel(table);
        table.addColumn("Mã hoa");
        table.addColumn("Tên hoa");
        table.addColumn("Loại hoa");
        table.addColumn("Màu sắc");
        table.addColumn("Số hoa con");
        table.addColumn("Số cánh hoa");
        table.addColumn("Số lượng");
        table.addColumn("Thời gian nhập");

        for (listFlower flower : listExport) {
            String time = flower.getDay() + "/" + flower.getMonth() + "/" + flower.getYear();
            table.addRow(new Object[]{flower.getCode(), flower.getName(), flower.getType(), flower.getColor(), flower.getSubFlowerNum(), flower.getPetalsFlowerNum(), flower.getAmount(), time});
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField CoutAmount;
    private javax.swing.JTextField CoutAmountS;
    private javax.swing.JButton CoutBtn;
    private javax.swing.JTextField CoutCode;
    private javax.swing.JTextField CoutCodeS;
    private javax.swing.JButton CoutReset;
    private javax.swing.JButton CoutResetS;
    private javax.swing.JButton btnCinExcel;
    private javax.swing.JButton btnCoutExcel;
    private javax.swing.JLabel btnEdit;
    private javax.swing.JLabel btnErrList;
    private javax.swing.JButton btnExcelErr;
    private javax.swing.JButton btnExcelHome;
    private javax.swing.JLabel btnHistoryEmp;
    private javax.swing.JLabel btnHistoryImp;
    private javax.swing.JLabel btnHome;
    private javax.swing.JLabel btnLogout;
    private javax.swing.JLabel btnRemove;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.JTextField cInAmount;
    private javax.swing.JRadioButton cInBanyan;
    private javax.swing.JButton cInBtn;
    private javax.swing.JTextField cInCode;
    private javax.swing.JTextField cInColor;
    private javax.swing.JTextField cInName;
    private javax.swing.JTextField cInPetalsFlower;
    private javax.swing.JButton cInReset;
    private javax.swing.JRadioButton cInSingle;
    private javax.swing.JTextField cInSubflower;
    private javax.swing.ButtonGroup cinButtonGroup;
    private javax.swing.JRadioButton coutBanyan;
    private javax.swing.JRadioButton coutBanyanS;
    private javax.swing.ButtonGroup coutButtonGroup;
    private javax.swing.JRadioButton coutSingle;
    private javax.swing.JRadioButton coutSingleS;
    private javax.swing.JTextField errAmount;
    private javax.swing.JRadioButton errBanyan;
    private javax.swing.JButton errCinButton;
    private javax.swing.JButton errClearButton;
    private javax.swing.JTextField errCode;
    private javax.swing.JTextField errColor;
    private javax.swing.JTextField errName;
    private javax.swing.JTextField errPetalsFlower;
    private javax.swing.JRadioButton errSingle;
    private javax.swing.JTextField errSubflower;
    private javax.swing.JPanel formCinHistory;
    private javax.swing.JPanel formCout;
    private javax.swing.JPanel formCoutHistory;
    private javax.swing.JPanel formCoutS;
    private javax.swing.JPanel formDelete;
    private javax.swing.JPanel formEdit;
    private javax.swing.JPanel formErr;
    private javax.swing.JPanel formHome;
    private javax.swing.JPanel formTableCoutS;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JSeparator jSeparator4;
    private javax.swing.JSeparator jSeparator5;
    private javax.swing.JSeparator jSeparator6;
    private javax.swing.JSeparator jSeparator9;
    private javax.swing.JLabel messFormCin;
    private javax.swing.JLabel messFormCin1;
    private javax.swing.JTable tableCin;
    private javax.swing.JTable tableCout;
    private javax.swing.JTable tableCoutS;
    private javax.swing.JTable tableError;
    private javax.swing.JTable tableHome;
    private javax.swing.JTable tbHistoryExport;
    private javax.swing.JTable tbHistoryImport;
    private javax.swing.JLabel titleCoutS;
    // End of variables declaration//GEN-END:variables
}
